name: Build & Release Wallora

on:
  push:
    branches: [main]

jobs:
  build-and-release:
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install dependencies
        run: npm install

      # --- Extract version from package.json ---
      - name: Extract version from package.json
        id: version
        shell: bash
        run: |
          version=$(node -p "require('./package.json').version")
          tag="v$version"
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "Version: $version"
          echo "Tag: $tag"

      # --- Build the app (includes .exe, .msi, .msix) ---
      - name: Build Wallora (Tauri)
        run: npm run tauri build

      - name: Get Artifacts Paths
        id: artifacts
        shell: bash
        run: |
          msi=$(ls target/release/bundle/msi/*.msi | head -n 1 || true)
          exe=$(ls target/release/bundle/nsis/*.exe | head -n 1 || true)
          echo "msi=$msi" >> $GITHUB_OUTPUT
          echo "exe=$exe" >> $GITHUB_OUTPUT

      - name: Upload MSI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Wallora-MSI
          path: ${{ steps.artifacts.outputs.msi }}

      - name: Upload EXE Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Wallora-EXE
          path: ${{ steps.artifacts.outputs.exe }}

      # --- Create Draft GitHub Release with Artifacts ---
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: Wallora ${{ steps.version.outputs.tag }}
          body: |
            ## ðŸŽ¨ Wallora ${{ steps.version.outputs.version }}
            
            Wallora brings beautiful wallpapers and a clock overlay to your desktop.
            
            ### âœ¨ Features
            - **Dynamic Wallpapers**: Support for images, videos, and GIFs
            - **Live Wallpapers**: Video wallpapers that play behind your desktop
            - **Date Widget**: Customizable desktop date widget with multiple fonts
            - **Auto-Change**: Randomized slideshow functionality
            - **System Tray**: Minimize to system tray for seamless operation
            - **Cross-Platform**: Windows, macOS, and Linux support
            
            ### ðŸ“¥ Download
            - **Windows Installer (Recommended)**: `Wallora_${{ steps.version.outputs.version }}_x64-setup.exe`
            - **Windows MSI**: `Wallora_${{ steps.version.outputs.version }}_x64_en-US.msi`
            
            ### ðŸ’» System Requirements
            - **Windows**: Windows 10 or later
            - **macOS**: macOS 10.15 or later  
            - **Linux**: Modern Linux distribution with X11 or Wayland
            
            ### ðŸš€ Installation
            1. Download the appropriate installer for your system
            2. Run the installer and follow the setup wizard
            3. Launch Wallora from your applications menu
            
            ---
            
            **Full Changelog**: https://github.com/riteshk-611/wallora/commits/${{ steps.version.outputs.tag }}
          prerelease: false
          files: |
            ${{ steps.artifacts.outputs.msi }}
            ${{ steps.artifacts.outputs.exe }}
